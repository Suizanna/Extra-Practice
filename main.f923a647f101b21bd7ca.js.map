{"version":3,"sources":["webpack:///./js/module -11.js"],"names":["delay","ms","Promise","resolve","setTimeout","then","time","console","log","logger","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","table","res","getPromise","resp","CountdownTimer","selector","targetDate","this","document","querySelector","start","intervalId","setInterval","Date","now","days","Math","floor","hours","mins","secs","changeTime","textContent","arr","getFlat1","flat","Infinity"],"mappings":"6iBAOA,IAAMA,EAAQ,SAAAC,GACZ,OAAO,IAAIC,SAAQ,SAACC,GAClBC,YAAW,WACTD,EAAQF,KAEPA,OAOPD,EAAM,KAAMK,MAHI,SAAAC,GAAI,OAAIC,QAAQC,IAAI,SAAZ,kBAAwCF,EAAxC,SAIxBN,EAAM,KAAMK,KAAKI,GACjBT,EAAM,MAAMK,KAAKI,GASjB,IAAMC,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GACjC,IAAMC,EAAeF,EAASG,KAAI,SAAAC,GAAI,OACpCA,EAAKP,OAASI,EAAd,iBAA8BG,EAA9B,CAAoCN,QAASM,EAAKN,SAAWM,KAE/D,OAAOhB,QAAQC,QAAQa,IAUnBP,EAAS,SAAAO,GAAY,OAAIT,QAAQY,MAAMH,I,iDAQ7C,sHACS,CACLI,IAAK,oBAFT,4C,sBALAP,EAAgBH,EAAO,SAASL,KAAKI,GACrCI,EAAgBH,EAAO,OAAOL,KAAKI,GAUnCF,QAAQC,I,0CAAIa,GAAahB,MAAK,SAAAiB,GAAI,OAAIf,QAAQC,IAAIc,O,IAM5CC,E,WACJ,cAAsC,IAAxBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAEtBC,KAAKF,SAAWG,SAASC,cAAcJ,GACvCE,KAAKD,WAAaA,E,2BAGpBI,MAAA,WAAQ,WACNtB,QAAQC,IAAIkB,KAAKF,SAASI,cAAc,wBACxCF,KAAKI,WAAaC,aAAY,WAC5B,IAAMzB,EAAO,EAAKmB,WAAaO,KAAKC,MAE9BC,EAAOC,KAAKC,MAAM9B,EAAO,OACzB+B,EAAQF,KAAKC,MAAO9B,EAAO,MAAR,MAEnBgC,EAAOH,KAAKC,MAAO9B,EAAO,KAAR,KAClBiC,EAAOJ,KAAKC,MAAO9B,EAAO,IAAe,KAE/C,EAAKkC,WAAWN,EAAMG,EAAOC,EAAMC,KAElC,M,EAELC,WAAA,SAAWN,EAAMG,EAAOC,EAAMC,GAC5Bb,KAAKF,SAASI,cAAc,uBAAuBa,YAAcP,EACjER,KAAKF,SAASI,cAAc,wBAAwBa,YAAcJ,EAClEX,KAAKF,SAASI,cAAc,uBAAuBa,YAAcH,EACjEZ,KAAKF,SAASI,cAAc,uBAAuBa,YAAcF,G,KAGrE,IAAIhB,EAAe,CACjBC,SAAU,WACVC,WAAY,IAAIO,KAAK,kBACpBH,QAEHtB,QAAQC,IAAI,WAEZ,IAAIe,EAAe,CACjBC,SAAU,WACVC,WAAY,IAAIO,KAAK,kBACpBH,QAEHtB,QAAQC,IAAI,WACZD,QAAQC,IAAI,gCAIZ,IAAMkC,EAAM,CACV,CAAC,QACD,GACA,CAAC,GAAI,CAAC,EAAG,CAAC,KAAM,CAAC,GAAI,CAAC,GAAI,GAAI,CAAC,IAAK,OAAQ,CAAC,CAAC,QAC9C,GACA,CAAC,IACD,QACA,CAAC,OAAQ,CAAC,WAAY,CAAC,YAAa,CAAE/B,KAAM,WAG9C,SAASgC,EAASD,GAEhB,OAAOA,EAAIE,KAAKC,KAElBtC,QAAQC,IAAI,kBAAmBmC,EAASD,IACxCnC,QAAQC,IAAI,sBAAuBmC,EAASD,IAiB5CnC,QAAQC,IAAI,oBAAqBmC,EAASD,M","file":"main.f923a647f101b21bd7ca.js","sourcesContent":["// 11 module\r\n\r\n// Напиши функцию delay(ms), которая возвращает промис, \r\n// переходящий в состояние \"resolved\" через ms миллисекунд. \r\n// Значением исполнившегося промиса должно быть то кол-во миллисекунд \r\n// которое передали во время вызова функции delay.\r\n\r\nconst delay = ms => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(ms);\r\n\r\n    }, ms)\r\n  })\r\n};\r\n\r\nconst logger1 = time => console.log('Delay:', `Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger1); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms\r\n\r\n\r\n// ================= TASK 2 ========================\r\n\r\n// Перепиши функцию toggleUserState() так, чтобы она не использовала \r\n// callback-функцию callback, а принимала всего \r\n// два параметра allUsers и userName и возвращала промис.\r\n\r\nconst users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n  const updatedUsers = allUsers.map(user =>\r\n    user.name === userName ? { ...user, active: !user.active } : user,\r\n  );\r\n  return Promise.resolve(updatedUsers)\r\n};\r\n// вар 2\r\nconst toggleUserState2 = async (allUsers, userName) => {//делает асинхрон фу-цию. возвращает промис\r\n  const updatedUsers2 = allUsers.map(user =>\r\n    user.name === userName ? { ...user, active: !user.active } : user,\r\n  );\r\n  return updatedUsers2;\r\n};\r\n\r\nconst logger = updatedUsers => console.table(updatedUsers);\r\n// const logger = a => console.table(a);//тоже работает\r\n\r\ntoggleUserState(users, 'Mango').then(logger);\r\ntoggleUserState(users, 'Lux').then(logger);\r\n\r\n\r\n// =================================\r\nasync function getPromise() {\r\n  return {\r\n    res: 'Promise resolve',\r\n  };\r\n}\r\n\r\nconsole.log(getPromise().then(resp => console.log(resp)));\r\n\r\n// ================= TASK ===================\r\n\r\n//Два Taймера обратного отсчет\r\n\r\nclass CountdownTimer {   //занимается только подчетом. не обновляет интерфес!\r\n  constructor({ selector, targetDate }) {\r\n    // this.intervalId = null;\r\n    this.selector = document.querySelector(selector);\r\n    this.targetDate = targetDate;\r\n  };\r\n\r\n  start() {\r\n    console.log(this.selector.querySelector('[data-value=\"days\"]'));\r\n    this.intervalId = setInterval(() => {\r\n      const time = this.targetDate - Date.now();\r\n\r\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 *\r\n        60));\r\n      const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n      const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n\r\n      this.changeTime(days, hours, mins, secs);\r\n\r\n    }, 1000);\r\n  }\r\n  changeTime(days, hours, mins, secs) {\r\n    this.selector.querySelector('[data-value=\"days\"]').textContent = days;\r\n    this.selector.querySelector('[data-value=\"hours\"]').textContent = hours;\r\n    this.selector.querySelector('[data-value=\"mins\"]').textContent = mins;\r\n    this.selector.querySelector('[data-value=\"secs\"]').textContent = secs;\r\n  }\r\n}\r\nnew CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2021'),\r\n}).start();\r\n\r\nconsole.log('timer-1');\r\n\r\nnew CountdownTimer({\r\n  selector: '#timer-2',\r\n  targetDate: new Date('Jul 17, 2022'),\r\n}).start();\r\n\r\nconsole.log('timer-2');\r\nconsole.log('Два Taймера обратного отсчет');\r\n\r\n// // ================= TASK ===================\r\n\r\nconst arr = [\r\n  [\"some\"],\r\n  12,\r\n  [34, [2, [33]], [12, [23, 89, [778, 999]]], [[\"88\"]]],\r\n  34,\r\n  [23],\r\n  \"hello\",\r\n  [\"five\", [\"some arr\", [\"last arr\"], { name: \"John\" }]],\r\n];\r\n// 1 вар\r\nfunction getFlat1(arr) {\r\n  //   return arr.join('').split(',');\r\n  return arr.flat(Infinity);\r\n}\r\nconsole.log('arr.join.split:', getFlat1(arr));\r\nconsole.log('arr.flat(Infinity):', getFlat1(arr));\r\n\r\n// 2 вар\r\nfunction getFlat(arr) {\r\n  let newArr = [];\r\n  arr.forEach((el) => {\r\n    Array.isArray(el) ? newArr = [...newArr, ...getFlat(el)] : newArr.push(el);//тернарник\r\n    //или запись\r\n    //   if (Array.isArray(el)) {\r\n    //     newArr = [...newArr, ...getFlat(el)];\r\n    //   } else {\r\n    //     newArr.push(el);\r\n    //   }\r\n  });\r\n  return newArr;\r\n}\r\n\r\nconsole.log('arr.forEach((el):', getFlat1(arr));\r\n\r\n  //==================================\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}